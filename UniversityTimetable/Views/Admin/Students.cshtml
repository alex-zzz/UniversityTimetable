@using Newtonsoft.Json

@model IEnumerable<UniversityTimetable.Models.StudentViewModel>
@{
    ViewBag.Title = "Groups";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h3>Groups</h3>

<div data-bind="simpleGrid: gridViewModel" class="panel panel-default"> </div>

@*<button data-bind="click: addItem" class="btn btn-primary">
    Add item
</button>*@

<button data-bind="click: jumpToFirstPage, enable: gridViewModel.currentPageIndex" class="btn btn-primary">
    Jump to first page
</button>


<div id="modalContainer">
</div>


@section scripts {
    <script>
        var PagedGridModel = function () {
            self = this;
            self.Students = ko.observableArray(@Html.Raw(JsonConvert.SerializeObject(this.Model)));

            self.editItem = function (item) {
                $.ajax({
                        url: '@Url.Action("EditStudent", "Admin")',
                        type: "GET",
                        data: "id=" + item.Id + "&GroupId=" + item.GroupId 
                    })
                    .done(function (partialViewResult) {
                        $("#modalContainer").html(partialViewResult);
                        $('#myModal').modal('show');
                    });
            };

            //self.updateItem = function (item) {
            //    var groupObj = JSON.parse('{"' + decodeURI(item).replace(/"/g, '\\"').replace(/&/g, '","').replace(/=/g, '":"') + '"}');
            //    var groupId = groupObj.Id;

            //    var group = ko.utils.arrayFirst(self.Groups(), function(group) {
            //        return group.Id === groupId;
            //    });

            //    self.Groups.replace(group, {
            //        Id: groupObj.Id,
            //        Name: groupObj.Name
            //    });
            //};

            @*self.removeItem = function (item) {
                $.ajax({
                    url: '@Url.Action("DeleteStudent", "Admin")',
                    type: "GET",
                    data: "id=" + item.Id
                });
                self.Groups.remove(item);
            };*@

            self.jumpToFirstPage = function () {
                self.gridViewModel.currentPageIndex(0);
            };


            self.gridViewModel = new ko.simpleGrid.viewModel({
                data: self.Students,
                columns: [
                    { headerText: "Name", rowText: "Name" },
                    { headerText: "Group", rowText: "GroupName" },
                    {
                        headerText: "", rowText: {
                            edit: function (item) {
                                return function () {
                                    self.editItem(item);
                                }
                            }
                        }
                    },
                    //{
                    //    headerText: "", rowText: {
                    //        delete: function (item) {
                    //            return function () {
                    //                self.removeItem(item);
                    //            }
                    //        }
                    //    }
                    //}
                ],
                pageSize: 6
            });
        }
        $(document).ready(function () {
            ko.applyBindings(new PagedGridModel());
        });


    </script>

}
