@using Newtonsoft.Json

@model IEnumerable<UniversityTimetable.Models.GroupViewModel>
@{
    ViewBag.Title = "Reports";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

}


<h3>Reports</h3>

<div data-bind="simpleGrid: gridViewModel" class="panel panel-default"> </div>

<button data-bind="click: addItem" class="btn btn-primary">
    Add item
</button>

<button data-bind="click: jumpToFirstPage, enable: gridViewModel.currentPageIndex" class="btn btn-primary">
    Jump to first page
</button>


<div id="modalContainer">
</div>




@section scripts {
    <script>


        var PagedGridModel = function () {
            var self = this;
            self.Groups = ko.observableArray(@Html.Raw(JsonConvert.SerializeObject(this.Model)));

            self.addItem = function () {
                $.ajax({
                        url: '@Url.Action("AddGroup", "Admin")',
                        type: "GET"
                    })
                    .done(function (partialViewResult) {
                        $("#modalContainer").html(partialViewResult);
                        $('#myModal').modal('show');
                    });

            };

            self.removeItem = function (item) {
                $.ajax({
                    url: '@Url.Action("DeleteGroup", "Admin")',
                    type: "GET",
                    data: "id=" + item.Id
                });
                self.Groups.remove(item);
            };

            self.editItem = function (item) {

                $.ajax({
                        url: '@Url.Action("EditGroup", "Admin")',
                        type: "GET",
                        data: "id=" + item.Id
                    })
                    .done(function (partialViewResult) {
                        $("#modalContainer").html(partialViewResult);
                        $('#myModal').modal('show');
                    });

            };



            self.jumpToFirstPage = function () {
                self.gridViewModel.currentPageIndex(0);
            };


            self.gridViewModel = new ko.simpleGrid.viewModel({
                data: self.Groups,
                columns: [
                    { headerText: "Name", rowText: "Name" },
                    { headerText: "Students", rowText: "StudentsList" },
                    {
                        headerText: "", rowText: {
                            edit: function (item) {
                                return function () {
                                    self.editItem(item);
                                    //console.log(item)
                                }
                            }
                        }
                    },
                    {
                        headerText: "", rowText: {
                            delete: function (item) {
                                return function () {
                                    self.removeItem(item);
                                    //console.log(item)
                                }
                            }
                        }
                    }
                ],
                pageSize: 6
            });
        }
        $(document).ready(function () {


            var viewModel = new PagedGridModel();
            ko.applyBindings(viewModel);
        });


    </script>

}
